create database ecommerce;

use ecommerce;

select * from customers;
select * from geolocation;
select * from order_items;
select * from orders;
select * from payments;
select * from products;
select * from sellers;

-- List all unique cities where customers are located.
select Distinct(customer_city) from customers Limit 5000;

-- Count the number of orders placed in 2017.
select count(order_id) from orders
where order_purchase_timestamp like "2017%";

-- Find the total sales per category.
select products.product_category as category, round(sum(payments.payment_value),2) as sales from payments
join order_items on payments.order_id = order_items.order_id
join products on products.product_id = order_items.product_id
group by products.product_category;


-- Calculate the percentage of orders that were paid in installments.
select ((count(payment_installments)/(select count(*) from payments)) * 100) as InstallmentPerc from payments
where payment_installments >= 1;

-- Count the number of customers from each state.
select customer_state, count(customer_state) from customers
group by customer_state;

-- Calculate the number of orders per month in 2018
select monthname(order_purchase_timestamp), count(order_purchase_timestamp) from orders
where year(order_purchase_timestamp) = 2018
group by monthname(order_purchase_timestamp);

-- Find the average number of products per order, grouped by customer city
select customers.customer_city ,round(avg(avgCnt),2) as AvgOrders from (select orders.order_id, orders.customer_id, count(order_items.product_id) as avgCnt from orders
join order_items on orders.order_id = order_items.order_id
group by orders.order_id, orders.customer_id) as temp
join customers on temp.customer_id = customers.customer_id
group by customers.customer_city 
order by AvgOrders desc limit 5000;

-- Calculate the percentage of total revenue contributed by each product category.
select products.product_category, round((sum(payments.payment_value)/(select sum(payments.payment_value) from payments) *100),2) as Perc from payments
join order_items on payments.order_id = order_items.order_id
join products on products.product_id = order_items.product_id
group by products.product_category
order by Perc desc;

-- Identify the correlation between product price and the number of times a product has been purchased
select products.product_category, count(order_items.product_id), round(avg(order_items.price),2) from products 
join order_items on products.product_id = order_items.product_id
group by products.product_category;

-- Calculate the total revenue generated by each seller, and rank them by revenue.
select order_items.seller_id, sum(payments.payment_value) as revenue from payments
join order_items on order_items.order_id = payments.order_id
group by order_items.seller_id
order by revenue desc;
